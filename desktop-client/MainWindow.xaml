<Window x:Class="ShowdownSoftware.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ShowdownSoftware"
        mc:Ignorable="d"
        Title="Acce1er8or" ResizeMode="CanResizeWithGrip" WindowStartupLocation="CenterScreen"
        Width="900" MinWidth="300" Height="600" MinHeight="200"
        Icon="pack://application:,,,/Resources/icon.ico" Closing="Window_Closing">
    <Window.Resources>
        <LinearGradientBrush x:Key="ProgressBarBrush" EndPoint="0, 0" StartPoint="0, 1">
            <GradientStop Color="#FFA6ABAF" Offset="0"/>
            <GradientStop Color="#FFD0D6DB" Offset="1"/>
        </LinearGradientBrush>
        <Style TargetType ="{x:Type ProgressBar}" x:Key="ProgressBarStyle">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="BorderBrush" Value="DodgerBlue"/>
                    <Setter Property="BorderThickness" Value="2"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter Property="BorderBrush" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="0"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    
    <Grid Margin="4" ShowGridLines="False" Name="mainGrid">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="70"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="90"/>
        </Grid.ColumnDefinitions>
        
        <Label Grid.Row="0" Grid.Column="0"
               HorizontalAlignment="Left" VerticalAlignment="Center"
               Padding="2" Margin="4"
               Name="lblURL" Content="URL" FontFamily="Tahoma" FontSize="14"/>
        
        <TextBox Grid.Row="0" Grid.Column="1"
                 VerticalAlignment="Center" HorizontalAlignment="Stretch"
                 Padding="2" Margin="4"
                 Name="txtURL" FontFamily="Tahoma" FontSize="14"/>
        
        <Button Grid.Row="0" Grid.Column="2"
                HorizontalAlignment="Stretch" VerticalAlignment="Center"
                Padding="8, 2, 8, 2" Margin="4"
                Name="btnAdd" Content="Add"
                FontFamily="Tahoma" FontSize="14" Click="btnAdd_Click"/>
        
        <Grid Visibility="Hidden"
              Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3"
              Margin="5" HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="3*"/>
                <ColumnDefinition Width="1.5*"/>
                <ColumnDefinition Width="0.7*"/>
                <ColumnDefinition Width="0.7*"/>
                <ColumnDefinition Width="0.7*"/>
                <ColumnDefinition Width="0.7*"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" x:Name="col0"/>
            <Grid Grid.Column="1" x:Name="col1"/>
            <Grid Grid.Column="2" x:Name="col2"/>
            <Grid Grid.Column="3" x:Name="col3"/>
            <Grid Grid.Column="4" x:Name="col4"/>
            <Grid Grid.Column="5" x:Name="col5"/>
        </Grid>
        <ListView Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="3"
                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SelectionMode="Single"
                  Name="downloadList" SelectionChanged="downloadList_SelectionChanged" MouseLeftButtonDown="downloadList_MouseLeftButtonDown" MouseDoubleClick="downloadList_MouseDoubleClick" KeyUp="downloadList_KeyUp"
                  FontFamily="Tahoma" FontSize="14">
            <ListView.Resources>
                <ContextMenu x:Key="downloadContextMenu"
                             DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                    <ContextMenu.Resources>
                        <Style TargetType="{x:Type MenuItem}" x:Key="enableIfCompleteOrCancelledStyle">
                            <Setter Property="IsEnabled" Value="False"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=IsComplete, Mode=OneWay}" Value="True">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsCancelled, Mode=OneWay}" Value="True">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </ContextMenu.Resources>
                    <MenuItem Header="Open"
                              InputGestureText="Double Click"
                              Click="downloadList_menuOpen"
                              IsEnabled="{Binding Path=IsComplete, Mode=OneWay}"/>
                    <MenuItem Header="Open Containing Folder"
                              Click="downloadList_menuOpenFolder"
                              IsEnabled="{Binding Path=IsComplete, Mode=OneWay}"/>
                    <Separator/>
                    <MenuItem Header="Copy URL"
                              Click="downloadList_menuCopyURL"/>
                    <Separator/>
                    <MenuItem Header="Pause"
                              Click="downloadList_menuPause"
                              IsEnabled="{Binding Path=CanPause, Mode=OneWay}"/>
                    <MenuItem Header="Resume"
                              Click="downloadList_menuResume"
                              IsEnabled="{Binding Path=CanResume, Mode=OneWay}"/>
                    <Separator/>
                    <MenuItem Header="Cancel"
                              InputGestureText="Del"
                              Click="downloadList_menuCancel"
                              IsEnabled="{Binding Path=CanCancel, Mode=OneWay}"/>
                    <MenuItem Header="Cancel and Remove"
                              InputGestureText="Shift+Del"
                              Click="downloadList_menuCancelRemove"
                              IsEnabled="{Binding Path=CanCancel, Mode=OneWay}"/>
                    <Separator/>
                    <MenuItem Header="Remove"
                              InputGestureText="Del"
                              Click="downloadList_menuRemove"
                              Style="{StaticResource enableIfCompleteOrCancelledStyle}"/>
                    <MenuItem Header="Remove and Delete"
                              InputGestureText="Shift+Del"
                              Click="downloadList_menuRemoveDelete"
                              IsEnabled="{Binding Path=IsComplete, Mode=OneWay}"/>
                </ContextMenu>
            </ListView.Resources>
            <ListView.ItemContainerStyle>
                <Style TargetType="{x:Type ListViewItem}" >
                    <Setter Property="ContextMenu" Value="{StaticResource downloadContextMenu}" />
                </Style>
            </ListView.ItemContainerStyle>
            <ListView.View>
                <GridView>
                    <GridView.ColumnHeaderContainerStyle>
                        <Style TargetType="GridViewColumnHeader">
                            <Setter Property="Height"  Value="20"/>
                        </Style>
                    </GridView.ColumnHeaderContainerStyle>
                    <GridViewColumn Header="Filename" DisplayMemberBinding="{Binding Path=Filename, Mode=OneWay}"
                                    Width="{Binding ElementName=col0, Path=ActualWidth}"/>
                    <GridViewColumn Header="Status" x:Name="statusCell"
                                    Width="{Binding ElementName=col1, Path=ActualWidth}">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Grid>
                                    <ProgressBar Value="{Binding Progress, Mode=OneWay}"  Height="20"
                                                 Width="{Binding Path=Width, ElementName=statusCell}"
                                                 FontFamily="Tahoma" FontSize="14"
                                                 Foreground="{StaticResource ProgressBarBrush}" />
                                    <TextBlock Text="{Binding Status, Mode=OneWay}"
                                               FontFamily="Tahoma" FontSize="14"
                                               HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Grid>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                    <GridViewColumn Header="Size" DisplayMemberBinding="{Binding Path=FormattedSize, Mode=OneWay}"
                                    Width="{Binding ElementName=col2, Path=ActualWidth}"/>
                    <GridViewColumn Header="Received" DisplayMemberBinding="{Binding Path=FormattedReceived, Mode=OneWay}"
                                    Width="{Binding ElementName=col3, Path=ActualWidth}"/>
                    <GridViewColumn Header="Speed" DisplayMemberBinding="{Binding Path=FormattedSpeed, Mode=OneWay}"
                                    Width="{Binding ElementName=col4, Path=ActualWidth}"/>
                    <GridViewColumn Header="Elapsed" DisplayMemberBinding="{Binding Path=Elapsed, Mode=OneWay, StringFormat='{}{0:hh\\:mm\\:ss}'}"
                                    Width="{Binding ElementName=col5, Path=ActualWidth}"/>
                </GridView>
            </ListView.View>
        </ListView>
        
        <GridSplitter Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="3"
                      Height="5"  HorizontalAlignment="Stretch"/>
        <ListBox Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="3"
                 HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                 HorizontalContentAlignment="Stretch"
                 Name="chunkList" MouseDoubleClick="chunkList_MouseDoubleClick"
                 FontFamily="Tahoma" FontSize="14">
            <ListBox.Resources>
                <ContextMenu x:Key="chunkContextMenu"
                             DataContext="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource Self}}">
                    <MenuItem Header="Reconnect"
                              Click="chunkList_menuReconnect"
                              InputGestureText="Double Click"
                              IsEnabled="{Binding Path=IsDownloading, Mode=OneWay}"/>
                </ContextMenu>
            </ListBox.Resources>
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}" >
                    <Setter Property="ContextMenu" Value="{StaticResource chunkContextMenu}" />
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <Grid>
                        <ProgressBar Value="{Binding Progress, Mode=OneWay}"
                                     Height="20"
                                     FontFamily="Tahoma" FontSize="14"
                                     Foreground="{StaticResource ProgressBarBrush}"
                                     Style="{StaticResource ProgressBarStyle}"/>
                        <TextBlock Text="{Binding FormattedProgress, Mode=OneWay}"
                                   FontFamily="Tahoma" FontSize="14"
                                   HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</Window>
